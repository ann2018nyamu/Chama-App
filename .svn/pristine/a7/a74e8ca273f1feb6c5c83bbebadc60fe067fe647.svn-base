package com.ekenya.echama.ui.home.drawer

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.EditText
import android.widget.TextView
import androidx.appcompat.app.AlertDialog
import androidx.fragment.app.Fragment
import androidx.fragment.app.activityViewModels
import androidx.lifecycle.Observer
import androidx.navigation.fragment.findNavController
import com.ekenya.echama.R
import com.ekenya.echama.databinding.FragmentUserupdateBinding
import com.ekenya.echama.model.Transaction
import com.ekenya.echama.model.User
import com.ekenya.echama.util.CustomProgressBar
import com.ekenya.echama.util.DataUtil
import com.ekenya.echama.util.ToastnDialog
import com.ekenya.echama.viewModel.MainViewModel
import com.google.android.material.button.MaterialButton
import com.google.android.material.textfield.TextInputLayout
import timber.log.Timber

class UserFragment : Fragment() {


    private var _binding: FragmentUserupdateBinding? = null
    // This property is only valid between onCreateView and
// onDestroyView.
    private val binding get() = _binding!!
    lateinit var btnDeposit:MaterialButton
    var activityList:ArrayList<Transaction> = ArrayList()
    val userVM: MainViewModel by   activityViewModels()
    var user:User? = null

    var page:Int = 1
    var size:Int = 10

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        //val root = inflater.inflate(R.layout.fragment_userupdate, container, false)
//        etSurname = view?.findViewById(R.id.etSurname)
//        etOtherNames=view.findViewById(R.id.etOtherNames)
//        etGender=view.findViewById(R.id.etGender)
//        etDateOfBirth=view.findViewById(R.id.etDateOfBirth)
//        tlEmail = view.findViewById(R.id.tlEmail)
//        tlDateOfBirth = view.findViewById(R.id.tlDateOfBirth)
//        tlGender=view.findViewById(R.id.tlGender)
//        tlSurname=view.findViewById(R.id.tlSurname)
//        tlOtherNames=view.findViewById(R.id.tlOtherNames)
//        etEmail=view.findViewById(R.id.etEmail)


       // groupViewModel.getGrpInvites(jsonInvitesDetails)
        _binding = FragmentUserupdateBinding.inflate(inflater, container, false)
        val view = binding.root

        initData()

        initButton()

        return view
        
    }


    private fun initButton() {
        binding.btnUpdate.setOnClickListener{
            if(validInfo()){
                val userData = HashMap<String, String>()
                userData["email"] =  user?.email.toString()  //"manduku.david@ekenya.co.ke"
                userData["gender"] = user?.gender.toString() //"Male"
                userData["firstname"] = user?.firstname.toString() //"David"
                userData["nationality"] = user?.nationality.toString() // "Kenyan"
                userData["identification"] = user?.identification.toString() //"280280280"
                userData["phonenumber"] = user?.phonenumber.toString() //"254719124626"
                userVM.updateUserDetails(userData)
            }
        }
        binding.btnChangePassword.setOnClickListener{
            changePassDialogue()

        }

    }
    fun changePassDialogue(title:String = "",message:String = ""){
        val builder = AlertDialog.Builder(this.requireContext())
        val mDialogView = LayoutInflater.from(this.requireContext()).inflate(R.layout.dialogue_layout, null)
        builder.setView(mDialogView)


        var tvDialogTitle: TextView =  mDialogView.findViewById(R.id.tvDialogTitle)
        var tvDialogMessage: TextView =  mDialogView.findViewById(R.id.tvDialogMessage)
        var tlPin: TextInputLayout =  mDialogView.findViewById(R.id.tlPin)
        var etxtPin: EditText =  mDialogView.findViewById(R.id.etxtPin)
        var btnReject: MaterialButton =  mDialogView.findViewById(R.id.btnReject)
        var btnApprove: MaterialButton =  mDialogView.findViewById(R.id.btnApprove)

        tvDialogTitle.text = "Enter Pin"
        tvDialogMessage.text = "Enter your pin to update your password"
        btnReject.text = "Cancel"
        btnApprove.text = "Proceed"

        // Create the AlertDialog
        val alertDialog: AlertDialog = builder.create()

        btnReject.setOnClickListener {
            alertDialog.dismiss()
        }
        btnApprove.setOnClickListener {
            if(etxtPin.text.isEmpty() || etxtPin.text.length < 4){
                tlPin.error = "Invalid Pin"
            }
            val ePinStr = DataUtil.getHashedPin256(etxtPin.text.toString())
            //Todo confirm with user encrypted pin
            if(etxtPin.text.toString().contentEquals("1234")){

                findNavController().navigate(R.id.nav_changepin)
              //  MainActivity.goTo(R.id.nav_changepin)
              //  (this.activity as MainActivity).goTo(R.id.nav_changepin)
               // Navigation.findNavController(binding.root).navigate(R.id.nav_changepin)
            }else{
                tlPin.error = "Incorrect Pin. 2 trials remaining"
            }
            alertDialog.dismiss()

        }
        // Set other dialog properties
        alertDialog.setCancelable(true)
        alertDialog.show()
    }

    private fun validInfo(): Boolean {


       return true
    }

    private fun initData() {
        CustomProgressBar.show(this.requireContext(),"Loading data")
        userVM.getUserDetails()


        userVM.myApiResponseLD.observe(viewLifecycleOwner, Observer {
            Timber.v("myApiResponseLD ${it.requestName} ${it.code} ${it.message}")

            if(it.code == 200){
                if(it.requestName.contentEquals("getUserDetailsRequest")){
                    populateData(it.responseObj as User)
                }
                if(it.requestName.contentEquals("updateUserDetailsRequest")){

                }
            }else{
                if(it.message.isNotEmpty()) {
                    ToastnDialog.toastError(this.requireContext(), it.message)
                }
            }
            CustomProgressBar.hide()
        })
    }

    private fun populateData(user: User) {
        binding.etDateOfBirth.setText( user.dateofbirth.toString())
        binding.etSurname.setText( user.firstname.toString())
        binding.etGender.setText( user.gender.toString())
        binding.etEmail.setText( user.email.toString())
        binding.etNationality.setText( user.nationality.toString())
        binding.etPhoneNumber.setText( user.phonenumber.toString())
        binding.etxtIdentity.setText( user.identification.toString())
    }
//    override fun onDestroyView() {
//        _binding = null
//    }

}