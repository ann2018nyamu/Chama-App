package com.ekenya.echama.ui.group.account

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.MenuItem
import android.view.View
import android.view.ViewGroup
import androidx.core.view.isVisible
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.fragment.findNavController
import androidx.navigation.ui.onNavDestinationSelected
import com.ekenya.echama.R
import com.ekenya.echama.databinding.AddAccountsFragmentBinding
import com.ekenya.echama.util.CustomProgressBar
import com.ekenya.echama.util.ToastnDialog
import com.ekenya.echama.util.expiredTokenDialogue
import com.ekenya.echama.viewModel.GroupViewModel
import timber.log.Timber

/**
 * A simple [Fragment] subclass.
 */
class AddAccountFragment : Fragment() {
    lateinit var groupViewModel:GroupViewModel
    private var _binding: AddAccountsFragmentBinding? = null
    private val binding get() = _binding!!
    var choosenAccount = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setHasOptionsMenu(true);
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {

        groupViewModel = ViewModelProvider(this).get(GroupViewModel::class.java)
        _binding = AddAccountsFragmentBinding.inflate(inflater, container, false)
        val rootView = binding.root
            R.layout.add_accounts_fragment
            initView()
            initButton()
            initData()

          //  binding.bankCL.visibility =  View.GONE //Todo remove this

            return rootView

        }

    private fun initButton() {
       binding.btnSaveAccount.setOnClickListener {
           if(validate()){
           var accountData  =    HashMap<String,Any>()
               groupViewModel.addGroupAccount(accountData)
           }
       }

    }

    private fun validate(): Boolean {
        if(choosenAccount.contentEquals("BA")){

        }else
        if(choosenAccount.contentEquals("SA")){

        }else
        if(choosenAccount.contentEquals("MMA")){

        }else
        if(choosenAccount.contentEquals("PCA")){

        }else
        if(choosenAccount.contentEquals("IV")){

        }

        return true
    }

    private fun toggleFMenu(){

        if(binding.bankCL.isVisible){
            binding.bankCL.visibility =  View.GONE
            binding.saccoCL.visibility = View.GONE
            binding.mmoneyCL.visibility = View.GONE
            binding.pettycashCL.visibility = View.GONE
            binding.investmentCL.visibility = View.GONE
            binding.btnSaveAccount.visibility = View.VISIBLE
        }else{
            binding.bankCL.visibility =  View.VISIBLE
            binding.saccoCL.visibility = View.VISIBLE
            binding.mmoneyCL.visibility = View.VISIBLE
            binding.pettycashCL.visibility = View.VISIBLE
            binding.investmentCL.visibility = View.VISIBLE
            binding.btnSaveAccount.visibility = View.GONE
        }

        toggleAccountFieldsLay()
    }

    private fun toggleAccountFieldsLay() {

        if(binding.bankCL.isVisible){
            binding.addBankAccountCL.visibility = View.GONE
            binding.addSaccoAccountCL.visibility = View.GONE
            binding.addMobileMoneyAccountCL.visibility = View.GONE
            binding.addPcAccountCL.visibility = View.GONE
            binding.addInvestmentAccountCL.visibility = View.GONE
        }
    }

    private fun initView() {
        binding.bankCL.setOnClickListener {
            choosenAccount = "BA"
            binding.addBankAccountCL.visibility = View.VISIBLE
            toggleFMenu()
        }

        binding.saccoCL.setOnClickListener {
            choosenAccount = "SA"
            binding.addSaccoAccountCL.visibility = View.VISIBLE
            toggleFMenu()
        }

        binding.mmoneyCL.setOnClickListener {
            choosenAccount = "MMA"
            binding.addMobileMoneyAccountCL.visibility = View.VISIBLE
            toggleFMenu()
        }

        binding.pettycashCL.setOnClickListener {
            Timber.v("binding.pettycashCL")
            choosenAccount = "PCA"
            binding.addPcAccountCL.visibility = View.VISIBLE
            toggleFMenu()
        }

        binding.investmentCL.setOnClickListener {
            Timber.v("binding.investmentCL")
            binding.addInvestmentAccountCL.visibility = View.VISIBLE
            choosenAccount = "IV"
            toggleFMenu()
        }

    }


    private fun initData() {

        groupViewModel.getAccountTypes()?.observe(viewLifecycleOwner, Observer { gatlist ->
            Timber.v("${gatlist.size}");
        })



        groupViewModel.myGroupApiResponseLD.observe(viewLifecycleOwner, Observer { gatlist ->

        })
        groupViewModel.myGroupApiResponseLD.observe(viewLifecycleOwner, Observer { myApiResponse ->
            CustomProgressBar.hide()
            Timber.v("myApiResponseLD  ${myApiResponse.code} ${myApiResponse.requestName} ${myApiResponse.message}")
            if(myApiResponse.code == 200){
                if(myApiResponse.requestName.contentEquals("addGroupAccountRequest")) {
                    ToastnDialog.toastSuccess(this.requireContext(),myApiResponse.message)
                    toggleFMenu()
                }

//                if(myApiResponse.requestName.contentEquals("getGrpTrxRequest")){
//
//                }

            }else  if(myApiResponse.code == 700) {
                CustomProgressBar.show(this.requireContext())
            }else{
                if(myApiResponse.message.isNotEmpty()){
                    ToastnDialog.toastError(this.context!!,"Error:"+myApiResponse.message)
                    if(myApiResponse.message.toLowerCase().contains("token expired")){
                        expiredTokenDialogue()
                    }
                }
            }
        })
    }
    /**
     * listens to menu item click event
     */
    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        Timber.v("onOptionsItemSelected group")
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.

        return when (item.itemId) {
            android.R.id.home -> {
                if(binding.bankCL.isVisible){
                    findNavController().navigateUp()
                }else{
                    toggleFMenu()
                }

                true
            }
            else -> {
                return item.onNavDestinationSelected( findNavController()) || super.onOptionsItemSelected(item)
                //super.onOptionsItemSelected(item)
            }
        }
    }


}
